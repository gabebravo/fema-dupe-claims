[{"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/Header.js":"1","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/App.js":"2","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/ZipField.js":"3","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/Map.js":"4","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/List.js":"5","/Users/gabebravo/Desktop/projects/fema-dupes/src/index.js":"6","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/ClaimsList.js":"7"},{"size":731,"mtime":1609126082230,"results":"8","hashOfConfig":"9"},{"size":1172,"mtime":1609126507518,"results":"10","hashOfConfig":"9"},{"size":2438,"mtime":1609297337871,"results":"11","hashOfConfig":"9"},{"size":4605,"mtime":1609338955050,"results":"12","hashOfConfig":"9"},{"size":897,"mtime":1609127281514,"results":"13","hashOfConfig":"9"},{"size":1240,"mtime":1609299834602,"results":"14","hashOfConfig":"9"},{"size":4009,"mtime":1609339056543,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11ipxgy",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/Header.js",[],"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/App.js",["34"],"import { useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useQuery } from 'react-query'\nimport axios from 'axios'\nimport Header from './Header'\nimport ZipField from './ZipField'\nimport Map from './Map'\nimport List from './List'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [zip, setZip] = useState('')\n  const [showList, setShowList] = useState(false)\n  const fetchFemaClaims = () => axios.get(process.env.REACT_APP_AWS_URL, { params: { zip } })\n  const rcResp = useQuery('fetchFemaClaims', fetchFemaClaims, { enabled: false })\n\n  console.log('rcResp', rcResp)\n  useEffect(() => {\n    if(zip) {\n      rcResp.refetch();\n      setShowList(false)\n    }\n  }, [zip])\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <ZipField setZip={setZip} />\n      <Grid container spacing={3} className={classes.gridContainer}>\n        <Map {...rcResp} setShowList={setShowList} />\n        <List {...rcResp} showList={showList} />\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/ZipField.js",[],"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/Map.js",["35"],"import {useState, useEffect} from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport RoomIcon from '@material-ui/icons/Room';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\nimport GoogleMapReact from 'google-map-react';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 800,\n  },\n  paper: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    width: '100%'\n  },\n  spinner: {\n    margin: 'auto',\n    marginTop: '10%',\n  },\n  marker: {\n    color: red[500],\n    fontSize: '2rem',\n    cursor: 'pointer'\n  }\n}));\n\nexport default function Map({ status = 'idle', data = undefined, error = null, \n  isFetching = false, setShowList = () => false \n}) {\n  const classes = useStyles();\n  const [isTooltipOpen, setIsTooltipOpen] = useState(false)\n  const [lat, setLat] = useState(null)\n  const [lng, setLong] = useState(null)\n  const [totalClaims, setTotalClaims] = useState(0)\n  const [buildingPaid, setBuildingPaid] = useState(0)\n  const [contentsPaid, setContentsPaid] = useState(0)\n\n  const getTotalNClaims = data => data.reduce((total, claim) => total += Number(claim.n), 0)\n  const getTotalBuildingPaid = data => data.reduce((total, claim) => total += !isNaN(Number(claim.amountPaidOnBuildingClaim)) ? Number(claim.amountPaidOnBuildingClaim) : 0, 0).toFixed(2)\n  const getTotalContentsPaid = data => data.reduce((total, claim) => total += !isNaN(Number(claim.amountPaidOnContentsClaim)) ? Number(claim.amountPaidOnBuildingClaim) : 0, 0).toFixed(2)\n\n  useEffect(() => {\n    if(status === 'success' && data?.data.length > 0) {\n      setLat(Number(data?.data[0]?.latitude))\n      setLong(Number(data?.data[0]?.longitude))\n      setTotalClaims(getTotalNClaims(data?.data))\n      setBuildingPaid(getTotalBuildingPaid(data?.data))\n      setContentsPaid(getTotalContentsPaid(data?.data))\n    }\n  }, [status, data])\n\n  const HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      maxWidth: 300,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n      cursor: 'pointer'\n    },\n  }))(Tooltip);\n\n  const pinClickHandler = () => {\n    setShowList(true)\n    setIsTooltipOpen(flag => !flag)\n  }\n\n  const Marker = ({ text }) => (\n    <HtmlTooltip\n      interactive\n      open={isTooltipOpen}\n      placement=\"top\"\n      title={\n        <>\n            <Typography color=\"primary\">{text}</Typography>\n            {`Total claims: ${totalClaims}`}<br></br>\n            {`Total Paid On Building Claims: $${buildingPaid}`}<br></br>\n            {`Total Paid On Contents Claims: $${contentsPaid}`}\n            <Typography color=\"secondary\">\n              <Button style={{textTransform: 'capitalize'}} color=\"secondary\" onClick={pinClickHandler}>Click here to see all claim details</Button>\n            </Typography>\n        </>\n      }\n    >\n      <RoomIcon onClick={() => setIsTooltipOpen(flag => !flag)} className={classes.marker} />\n    </HtmlTooltip>\n  )\n\n  // const handleApiLoaded = (map, maps) => {\n  //   // use map and maps objects\n  // };\n\n  if (isFetching) return <CircularProgress size={80} thickness={3.0} className={classes.spinner}/>;\n\n  if (error) return <Paper>{ \"An error has occurred: \" + error.message }</Paper>\n\n  return (\n    <Grid item sm={7} xs={12} className={classes.root}>\n      <Paper className={classes.paper}>\n        {\n          lat && lng ? (\n            <GoogleMapReact\n            defaultZoom={13}\n            center={{ lat, lng }}\n            defaultCenter={{ lat, lng }}\n            bootstrapURLKeys={{ key: process.env.REACT_APP_GMAPS_KEY }}\n            // READ DOCS ON THESE 2 PROPS\n            // yesIWantToUseGoogleMapApiInternals\n            // onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n          >\n            <Marker\n              lat={lat}\n              lng={lng}\n              text=\"Overview\"\n            />\n          </GoogleMapReact>\n          ) : <Typography>Please enter an address to search for claims</Typography>\n        }\n      </Paper>\n    </Grid>\n  )\n}","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/List.js",["36"],"import Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClaimsList from './ClaimsList'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    overflow: 'auto',\n    width: '100%'\n  },\n}));\n\nexport default function List({ data = [], showList = false }) {\n  const classes = useStyles();\n\n  return (\n    <Grid item item sm={5} xs={12} className={classes.root}>\n      <Paper className={classes.paper}>\n        { showList && data?.data.length > 0 ? <ClaimsList claims={data?.data}/> : <Typography>Please click on \"get info\" on map pin to see claims</Typography>}\n      </Paper>\n    </Grid>\n  )\n}","/Users/gabebravo/Desktop/projects/fema-dupes/src/index.js",[],"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/ClaimsList.js",["37","38","39","40","41","42","43"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { format } from 'date-fns'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    '& .MuiDivider-inset': {\n      marginLeft: 0\n    }\n  },\n  gridRoot: {\n    flexGrow: 1,\n  },\n  inline: {\n    display: 'inline',\n  },\n  '& .MuiTypography-displayBlock': {\n    marginBottom: '1rem'\n  },\n  '& .MuiGrid-spacing-xs-3 > .MuiGrid-item': {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 12,\n  }\n}));\n\nexport default function ClaimsList({ claims }) {\n  const classes = useStyles();\n\n  return claims.map((claim) => {\n    const {\n      n,\n      censusTract,\n      dateOfLoss,\n      amountPaidOnBuildingClaim,\n      id,\n      floodZone, \n      amountPaidOnContentsClaim, \n      group_id,\n      elevationDifference,\n      obstructionType,\n      elevationCertificateIndicator, \n      primaryResidence,\n      yearOfLoss, \n      latitude,\n      longitude,\n      reportedCity,\n      state,\n      reportedZipcode,\n      countyCode,\n      totalContentsInsuranceCoverage,\n      originalNBDate,\n      totalBuildingInsuranceCoverage,\n    } = claim\n\n    return (\n      <List key={id} className={classes.root}>\n        <ListItem alignItems=\"flex-start\">\n          <ListItemText\n            primary={' Detailed Claim Info'}\n            secondary={\n              <div className={classes.gridRoot}>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Claims: ${n}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Date of Loss: ${format( new Date(dateOfLoss), 'MM/dd/yyyy')}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Paid On Building: ${amountPaidOnBuildingClaim}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`floodZone: ${floodZone}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Paid On Contents: ${amountPaidOnContentsClaim}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Elevation Difference: ${elevationDifference}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Obstruction Type: ${obstructionType}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Elevation Certificate: ${elevationCertificateIndicator}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Primary Residence: ${primaryResidence}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Year of Loss: ${yearOfLoss}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`County Code: ${countyCode}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Contents Coverage: ${totalContentsInsuranceCoverage}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Date Built: ${format( new Date(originalNBDate), 'MM/dd/yyyy')}`}</span>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <span>{`Building Coverage: ${totalBuildingInsuranceCoverage}`}</span>\n                  </Grid>\n                </Grid>\n              </div>\n            }\n          />\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n      </List>\n    )   \n  })\n}\n",{"ruleId":"44","severity":1,"message":"45","line":30,"column":6,"nodeType":"46","endLine":30,"endColumn":11,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":25},{"ruleId":"52","severity":1,"message":"53","line":25,"column":16,"nodeType":"54","endLine":25,"endColumn":20},{"ruleId":"48","severity":1,"message":"55","line":40,"column":7,"nodeType":"50","messageId":"51","endLine":40,"endColumn":18},{"ruleId":"48","severity":1,"message":"56","line":46,"column":7,"nodeType":"50","messageId":"51","endLine":46,"endColumn":15},{"ruleId":"48","severity":1,"message":"57","line":52,"column":7,"nodeType":"50","messageId":"51","endLine":52,"endColumn":15},{"ruleId":"48","severity":1,"message":"58","line":53,"column":7,"nodeType":"50","messageId":"51","endLine":53,"endColumn":16},{"ruleId":"48","severity":1,"message":"59","line":54,"column":7,"nodeType":"50","messageId":"51","endLine":54,"endColumn":19},{"ruleId":"48","severity":1,"message":"60","line":55,"column":7,"nodeType":"50","messageId":"51","endLine":55,"endColumn":12},{"ruleId":"48","severity":1,"message":"61","line":56,"column":7,"nodeType":"50","messageId":"51","endLine":56,"endColumn":22},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rcResp'. Either include it or remove the dependency array.","ArrayExpression",["62"],"no-unused-vars","'ClickAwayListener' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'censusTract' is assigned a value but never used.","'group_id' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'reportedCity' is assigned a value but never used.","'state' is assigned a value but never used.","'reportedZipcode' is assigned a value but never used.",{"desc":"63","fix":"64"},"Update the dependencies array to be: [rcResp, zip]",{"range":"65","text":"66"},[841,846],"[rcResp, zip]"]