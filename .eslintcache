[{"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/Header.js":"1","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/App.js":"2","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/ZipField.js":"3","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/Map.js":"4","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/List.js":"5","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/MockList.js":"6","/Users/gabebravo/Desktop/projects/fema-dupes/src/index.js":"7"},{"size":714,"mtime":1608170640063,"results":"8","hashOfConfig":"9"},{"size":580,"mtime":1608262009581,"results":"10","hashOfConfig":"9"},{"size":2691,"mtime":1608270088847,"results":"11","hashOfConfig":"9"},{"size":718,"mtime":1608177624254,"results":"12","hashOfConfig":"9"},{"size":629,"mtime":1608177538688,"results":"13","hashOfConfig":"9"},{"size":10821,"mtime":1608178286611,"results":"14","hashOfConfig":"9"},{"size":396,"mtime":1608179780889,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11ipxgy",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/Header.js",[],"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/App.js",[],"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/ZipField.js",["32","33","34"],"import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useForm } from 'react-hook-form'\nimport { useQuery } from 'react-query'\nimport { object, string } from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 3,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}));\n\nexport default function ZipField() {\n  const classes = useStyles();\n  const [zip, setZip] = useState('')\n  const fetchFemaClaims = () => axios.get('https://er315fks07.execute-api.us-east-1.amazonaws.com/dev/getfemaclaimsbyzip', { params: { zip } })\n  const { isLoading, error, data, refetch } = useQuery('fetchFemaClaims', fetchFemaClaims, { enabled: false })\n\n  useEffect(() => {\n    // manually refetch\n    zip && refetch();\n  }, [zip])\n\n  const validationSchema = \n        object().shape({\n          zip: string().matches(/^[0-9]{5}$/, 'Must be exactly 5 digits')\n        })\n      .required()\n  \n  const { errors, register, handleSubmit, reset } = useForm({\n    mode: 'onBlur',\n    defaultValues: { zip: '' }, \n    resolver: yupResolver(validationSchema),\n    reValidateMode: 'onBlur'\n  })\n\n  const onSubmit = (data, e) => {\n    setZip(data?.zip)\n    reset()\n  }\n  \n  console.log('data', data)\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper component=\"form\" onSubmit={handleSubmit(onSubmit)} className={classes.root}>\n            <IconButton className={classes.iconButton} aria-label=\"zip\">\n              <SearchIcon />\n            </IconButton>\n              <Input\n                inputRef={register}\n                name=\"zip\"\n                required\n                className={classes.input}\n                placeholder=\"Enter Zipcode\"\n                inputProps={{ 'aria-label': 'search by zip', maxLength: 5 }}\n                error={errors.hasOwnProperty('zip')}\n              />\n              <Button onClick={handleSubmit(onSubmit)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                Search\n              </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/gabebravo/Desktop/projects/fema-dupes/src/components/Map.js",["35"],"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/List.js",[],"/Users/gabebravo/Desktop/projects/fema-dupes/src/components/MockList.js",[],"/Users/gabebravo/Desktop/projects/fema-dupes/src/index.js",["36"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query'\nimport App from './components/App';\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n",{"ruleId":"37","severity":1,"message":"38","line":38,"column":11,"nodeType":"39","messageId":"40","endLine":38,"endColumn":20},{"ruleId":"37","severity":1,"message":"41","line":38,"column":22,"nodeType":"39","messageId":"40","endLine":38,"endColumn":27},{"ruleId":"42","severity":1,"message":"43","line":43,"column":6,"nodeType":"44","endLine":43,"endColumn":11,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":23,"column":9,"nodeType":"48","endLine":23,"endColumn":158},{"ruleId":"37","severity":1,"message":"49","line":3,"column":44,"nodeType":"39","messageId":"40","endLine":3,"endColumn":52},"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["50"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useQuery' is defined but never used.",{"desc":"51","fix":"52"},"Update the dependencies array to be: [refetch, zip]",{"range":"53","text":"54"},[1335,1340],"[refetch, zip]"]